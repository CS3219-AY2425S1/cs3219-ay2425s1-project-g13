@startuml

skinparam rectangle {
  BackgroundColor LightGoldenRodYellow
  BorderColor DarkGoldenRod
  FontColor Black
}

actor Client as client

rectangle "User Service" as userService {
  queue "QUESTION_TO_USER_QUEUE" as questionToUserQueue
}

rectangle "Matching Service" as matchingService {
  queue "MATCH_TO_QUESTION_QUEUE" as matchToQuestionQueue
}

rectangle "Question Service" as questionService {
  rectangle "Question Repository" as questionRepo
  queue "QUESTION_TO_USER_QUEUE" as questionToUserQueue
}

client -> userService : HTTP Request\n(match request)
userService -> matchingService : Send match request\nvia MATCH_REQUEST_QUEUE

matchToQuestionQueue --> questionService : Consume match data for question
questionService -> questionRepo : Retrieve random question\n(based on complexity and topic)

questionService -> questionToUserQueue : Publish matched data and question

questionToUserQueue --> userService : Deliver question to user

@enduml
